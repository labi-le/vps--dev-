<?php

namespace Labile\Bot;

use Conference;
use Timer;

trait ChatEvents
{
    // –î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    protected function chat_invite_user()
    {
        if ($this->action_member_id == -$this->group_id) {
            $this->vk->msg('–û—Ö–∞—ë üò° –∞ –Ω—É-–∫–∞ –±—ã—Å—Ç—Ä–æ –º–Ω–µ –¥–∞–π –∞–¥–º–∏–Ω–∫—É –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π –±–µ—Å–µ–¥—É –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ /reg')
                ->kbd($this->vk->buttonText('–ö–Ω–æ–ø–∫–∞ –Ω–∏–∂–µ', 'green', ['chat' => 'registration']), true, false)
                ->send();
        }

        $conference = Conference::load($this->chat_id);

        if ($conference->statusWelcomeMsg()) {
            $this->vk->msg($conference->getWelcomeMsg())->send();
        }

        if ($conference->statusTuring_test()) {
            $user_id = $this->action_member_id ?? $this->user_id;
            Timer::load($user_id);

            $turing = $this->turingTest();
            $invalidSum = $turing['array'];
            $result = $turing['result'];
            $text = $turing['text'];


            $this->vk->msg('–¢–µ—Å—Ç –î–µ–Ω–∏—Å–∞ –¢—å—é—Ä–∏–Ω–≥–∞ –Ω–∞ –≤—ã—è–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞ –∏–ª–∏ —Ç—É–ø–æ–≥–æ –¥–æ–ª–±–∞—ë–±–∞, –≤—ã–±–µ—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç, –∏–Ω–∞—á–µ  ~—Ç—ã|' . $user_id . '~ –±—É–¥–µ—à—å –∫–∏–∫–Ω—É—Ç' . \PHP_EOL . \PHP_EOL . '–ü—Ä–∏–º–µ—Ä —Ç–∞–∫–æ–≤: ' . $text)
                ->kbd(call_user_func(function () use ($invalidSum) {
                    $kb = [];
                    $str = 0;
                    foreach ($invalidSum as $sum) {
                        $kb[$str][] = $this->vk->buttonText($sum, 'white', ['chat' =>  'push_button', 'sum' => $sum]);
                    }
                    return $kb;
                }), true, false)
                ->send();

            $timer = Timer::load($user_id);
            $timer->set_valid_num($result);
            $timer->off_test_passed();

            sleep(60);


            if ($timer->test_passed() == 'off') {
                $this->vk->removeChatUser($this->chat_id, $user_id);
            }

            $timer->remove();
        }
    }

    // –î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Å—Å—ã–ª–∫–µ
    protected function chat_invite_user_by_link()
    {
        $this->chat_invite_user();
    }

    // –î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ —é–∑–µ—Ä–∞ –∏–∑ –±–µ—Å–µ–¥—ã\–∫–∏–∫
    protected function chat_kick_user()
    {
        $status = Conference::load($this->chat_id);

        if ($status->allStatus()['auto_kick_status']) {
            $this->vk->removeChatUser($this->chat_id, $this->action_member_id);
        }

        if ($status->allStatus()['exit_msg_status']) {
            $this->vk->msg($status->getExitMsg())->send();
        }
    }


    // –î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ñ–æ—Ç–∫–∏ –±–µ—Å–µ–¥—ã
    protected function chat_photo_update()
    {
    }

    // –î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–æ—Ç–æ –±–µ—Å–µ–¥—ã
    protected function chat_photo_remove()
    {
    }

    // –î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    protected function chat_pin_message()
    {
    }

    // –î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–∏–∏
    protected function chat_unpin_message()
    {
    }
}
